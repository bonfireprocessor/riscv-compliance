BONFIRE     = $(ROOTDIR)/riscv-target/bonfire/device/rv32i
LDSCRIPT    = $(ROOTDIR)/riscv-target/bonfire/device/rv32i/bonfire.ld
TRAPHANDLER = $(ROOTDIR)/riscv-target/bonfire/device/rv32i/handler.S
DEFINES     = -DPRIV_MISA_S=0 -DPRIV_MISA_U=0 -DTRAPHANDLER="\"$(TRAPHANDLER)\""
BONFIRE_CONF ?= --BRANCH_PREDICTOR=true --USE_ICACHE=true
BONFIRE_CORESROOT ?= $(BONFIRE)
BONFIRE_CPU ?= bonfire-cpu 

TARGET_SIM   ?= fusesoc --config=$(BONFIRE)/fusesoc.conf --cores-root=$(BONFIRE_CORESROOT) sim --no-export $(BONFIRE_CPU) 
TARGET_FLAGS ?= $(RISCV_TARGET_FLAGS)

RUN_TARGET=\
    $(TARGET_SIM)  \
	    $(BONFIRE_CONF) \
        --TestFile=$(*).elf.hex \
	    --signature_file=$(*).signature.output

RISCV_PREFIX   ?= riscv64-unknown-elf-
RISCV_GCC      ?= $(RISCV_PREFIX)gcc
RISCV_OBJDUMP  ?= $(RISCV_PREFIX)objdump
RISCV_OBJCOPY  ?= $(RISCV_PREFIX)objcopy
RISCV_NM       ?= $(RISCV_PREFIX)nm
RISCV_READELF  ?= $(RISCV_PREFIX)readelf
RISCV_GCC_OPTS ?= -static  -fvisibility=hidden -nostdlib -nostartfiles
HEXDUMP ?= hexdump

COMPILE_TARGET=\
	$$(RISCV_GCC) $(1) $$(RISCV_GCC_OPTS) \
		-I$(ROOTDIR)/riscv-test-env/ \
		-I$(ROOTDIR)/riscv-test-env/p/ \
		-I$(TARGETDIR)/$(RISCV_TARGET)/ \
		$(DEFINES) -T$(LDSCRIPT) $$(<) \
		-o $$(@); \
    $$(RISCV_OBJDUMP) -D $$(@) > $$(@).objdump; \
    $$(RISCV_READELF) -a $$(@) > $$(@).readelf; \
    $$(RISCV_OBJCOPY) -O binary $$(@) $$(@).bin; \
    $(HEXDUMP) -v -e '1/4 "%08x\n"' $$(@).bin > $$(@).hex  
