BONFIRE     = $(ROOTDIR)/riscv-target/bonfire/device/rv32im
LDSCRIPT    = $(ROOTDIR)/riscv-target/bonfire/device/rv32im/bonfire.ld
TRAPHANDLER = $(ROOTDIR)/riscv-target/bonfire/device/rv32im/handler.S
DEFINES     = -DPRIV_MISA_S=0 -DPRIV_MISA_U=0 -DTRAPHANDLER="\"$(TRAPHANDLER)\""
BONFIRE_CONF ?= --BRANCH_PREDICTOR=false --USE_ICACHE=false

TARGET_SIM   ?= fusesoc --config=$(ROOTDIR)/riscv-target/bonfire/fusesoc.conf sim --no-export bonfire-cpu 
TARGET_FLAGS ?= $(RISCV_TARGET_FLAGS)

RUN_TARGET=\
    $(TARGET_SIM) $(TARGET_FLAGS)  \
	    $(BONFIRE_CONF) \
        --TestFile=$(work_dir_isa)/$(*).elf.hex \
	    --signature_file=$(work_dir_isa)/$(*).signature.output

RISCV_PREFIX   ?= riscv32-unknown-elf-
RISCV_GCC      ?= $(RISCV_PREFIX)gcc
RISCV_OBJDUMP  ?= $(RISCV_PREFIX)objdump
RISCV_OBJCOPY  ?= $(RISCV_PREFIX)objcopy
RISCV_NM       ?= $(RISCV_PREFIX)nm
RISCV_READELF  ?= $(RISCV_PREFIX)readelf
RISCV_GCC_OPTS ?= -static  -fvisibility=hidden -nostdlib -nostartfiles
HEXDUMP ?= hexdump

COMPILE_TARGET=\
	$$(RISCV_GCC) $(2) $$(RISCV_GCC_OPTS) \
		-I$(ROOTDIR)/riscv-test-env/ \
		-I$(ROOTDIR)/riscv-test-env/p/ \
		-I$(TARGETDIR)/$(RISCV_TARGET)/ \
		$(DEFINES) -T$(LDSCRIPT)  $$< \
		 -o $(work_dir_isa)/$$@; \
    $$(RISCV_OBJDUMP) -D $(work_dir_isa)/$$@ > $(work_dir_isa)/$$@.objdump; \
    $$(RISCV_READELF) -a $(work_dir_isa)/$$@ > $(work_dir_isa)/$$@.readelf; \
    $$(RISCV_NM) $(work_dir_isa)/$$@ > $(work_dir_isa)/$$@.nm; \
    $(RISCV_OBJCOPY) -S -O binary $(work_dir_isa)/$$@  $(work_dir_isa)/$(basename $$@).bin; \
	$(HEXDUMP) -v -e '1/4 "%08x\n"' $(work_dir_isa)/$(basename $$@).bin > $(work_dir_isa)/$(basename $$@).hex
